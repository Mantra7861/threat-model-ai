
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Allow users to read their own profile data
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to create their own user profile upon signup
      // Ensure they are setting their own role to 'editor' initially
      allow create: if request.auth != null && request.auth.uid == userId &&
                       request.resource.data.role == 'editor' &&
                       request.resource.data.email == request.auth.token.email; // Optional: verify email too

      // Allow admins to update the role of any user
      allow update: if request.auth != null &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
                       request.resource.data.keys().hasOnly(['role']); // Only allow updating the 'role' field by admins
    }

    // Allow admins to list/read all users for the management page
    match /users/{document=**} {
      allow list, get: if request.auth != null &&
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Add rules for other collections (e.g., diagrams/projects) here
    // Example (adjust based on actual project structure):
    // match /projects/{projectId} {
    //   // Allow editors and admins to read/write their projects
    //   // Allow viewers to read projects they have access to (requires more complex structure)
    //   allow read, write: if request.auth != null && (
    //                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
    //                        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor' && resource.data.ownerId == request.auth.uid) // Example owner check
    //                      );
    // }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
