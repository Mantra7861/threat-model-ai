
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function isAdmin(userId) {
      // Ensure isAuthenticated is checked before trying to access request.auth.uid
      return isAuthenticated() && getUserData(userId).role == 'admin';
    }

    // Users collection: Read own profile, Admins can read/write all
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow write: if isAuthenticated() && isAdmin(request.auth.uid);
      allow create: if isAuthenticated(); // Role is set to 'editor' by default in userService.ts
    }
    match /users {
      allow list: if isAuthenticated() && isAdmin(request.auth.uid); 
    }

    // ThreatModels collection: Users can manage their own models
    match /threatModels/{modelId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    match /threatModels {
      allow list: if isAuthenticated(); // Users can list their own models (client queries by userId)
    }

    // Stencils collection: TEMPORARILY PUBLIC FOR DIAGNOSTIC PURPOSES
    // These rules make the stencils collection readable, listable, and writable by anyone.
    // This is ONLY for diagnosing if the issue is with auth context in Server Actions
    // or a more fundamental problem.
    // MUST BE REVERTED to secure admin-only rules immediately after testing.
    match /stencils/{stencilId} {
      allow read, write: if true; // Allows get, create, update, delete for any document
    }
    match /stencils {
      allow list: if true;      // Allows listing all stencils
    }
  }
}
