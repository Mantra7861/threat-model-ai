
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for user profiles
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow authenticated users to create their profile (typically on signup)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow admins to update any profile (for role changes)
      // Allow users to update their own profile (e.g., display name, photoURL)
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      // Generally, profiles shouldn't be deleted, but allow admins if necessary
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

     // Rules for listing users (for admin page)
     match /users {
        // Only allow admins to list all users
       allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
     }


    // Rules for threat models
    match /threatModels/{modelId} {
      // Allow authenticated users to create new threat models
      allow create: if request.auth != null;
      // Allow users to read their own threat models
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Allow users to update their own threat models
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // Allow users to delete their own threat models
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

     // Rules for listing threat models
     match /threatModels {
        // Allow users to list only their own models (queries must include userId filter)
       allow list: if request.auth != null && request.query.resource.data.userId == request.auth.uid;
     }
  }
}
