
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      // Ensure user is authenticated before trying to get data
      return request.auth != null && request.auth.uid == userId && get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection:
    // - Authenticated users can read their own profile.
    // - Admins can read and write any user profile (for role management).
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin(request.auth.uid));
      allow list: if isAdmin(request.auth.uid); // Only admins can list all users
      allow create: if isAuthenticated(); // Allow user creation on signup
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin(request.auth.uid));
      // No delete for now, or make it admin-only
    }

    // ThreatModels collection:
    // - Users can only CRUD their own threat models.
    match /threatModels/{modelId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    match /threatModels {
       // Allow users to list models they own (client queries by userId)
      allow list: if isAuthenticated();
    }

    // Stencils collection:
    // - Write operations (create, update, delete) require admin.
    // - Read operations on individual stencils require admin.
    // - List operation temporarily allows any authenticated user for diagnostics.
    match /stencils/{stencilId} {
      allow read, write: if isAdmin(request.auth.uid);
    }
    match /stencils {
      // TEMPORARY DIAGNOSTIC RULE: Allow any authenticated user to list stencils.
      // MUST BE REVERTED to admin-only after testing.
      allow list: if request.auth != null;
      // Previous secure rule:
      // allow list: if isAdmin(request.auth.uid);
    }
  }
}
