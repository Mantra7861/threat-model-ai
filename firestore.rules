
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to get user data, specifically the role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // User profiles
    match /users/{userId} {
      // Admins can list all users and read any user document
      allow list, read: if isAuthenticated() && getUserRole(request.auth.uid) == 'admin';
      // Admins can update the 'role' field of any user
      allow update: if isAuthenticated() && getUserRole(request.auth.uid) == 'admin'
                    && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role']);
      // Users can read their own profile
      allow read: if isAuthenticated() && request.auth.uid == userId;
      // Users can create their own profile document (e.g., on signup)
      // Ensure they can only set their own role to 'editor' or 'viewer' initially, not 'admin'
      allow create: if isAuthenticated() && request.auth.uid == userId
                    && (request.resource.data.role == 'editor' || request.resource.data.role == 'viewer');
    }

    // Stencils
    match /stencils/{stencilId} {
      // Temporarily allow any authenticated user to read/list stencils for debugging
      allow read, list: if isAuthenticated(); 
      // Only admins can create, update, or delete stencils
      allow create, update, delete: if isAuthenticated() && getUserRole(request.auth.uid) == 'admin';
    }

    // Threat Models
    match /threatModels/{modelId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    // Allow authenticated users to list models (client-side query will filter by userId)
    match /threatModels {
       allow list: if isAuthenticated();
    }
  }
}
