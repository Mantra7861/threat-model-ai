
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection Rules
    match /users/{userId} {
      // Allow reads by any authenticated user (can be restricted further if needed)
      allow read: if request.auth != null;

      // Allow creation only by the user themselves
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow updates only by the user themselves or an admin
      // Admins might need broader update capabilities later, but for now, focus on self-updates + role updates by admin
      allow update: if request.auth != null && (
                      request.auth.uid == userId || // User can update their own profile (e.g., displayName, photoURL)
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role'])) // Admin can ONLY update the 'role' field
                    );
                    
      // Allow deletion only by the user themselves or an admin (generally not recommended to allow user deletion directly)
      // Consider disabling user deletion or handling it via backend functions for cleanup.
      // allow delete: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if false; // Safer default: disallow client-side deletion of user profiles
    }

    // Default deny all other collections/paths unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
