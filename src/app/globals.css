@import '@xyflow/react/dist/style.css';
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
}

@layer base {
  :root {
    /* Light Theme */
    --background: 0 0% 96.1%; /* Light Gray #F5F5F5 */
    --foreground: 240 10% 3.9%; /* Dark Gray */
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 234 64% 30%; /* Dark Blue #1A237E */
    --primary-foreground: 0 0% 98%; /* White */
    --secondary: 0 0% 96.1%; /* Light Gray #F5F5F5 */
    --secondary-foreground: 240 10% 3.9%; /* Dark Gray */
    --muted: 0 0% 90%; /* Slightly darker gray */
    --muted-foreground: 240 5% 45%; /* Gray */
    --accent: 187 100% 38%; /* Teal #00ACC1 */
    --accent-foreground: 0 0% 98%; /* White */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%; /* Gray border */
    --input: 0 0% 89.8%; /* Gray input */
    --ring: 187 100% 38%; /* Teal for focus rings */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;

    /* Sidebar specific theme (Light mode) */
    --sidebar-background: 234 64% 30%; /* Dark Blue #1A237E */
    --sidebar-foreground: 0 0% 98%; /* White */
    --sidebar-primary: 0 0% 98%; /* White for primary elements inside sidebar */
    --sidebar-primary-foreground: 234 64% 30%; /* Dark Blue */
    --sidebar-accent: 187 100% 38%; /* Teal #00ACC1 */
    --sidebar-accent-foreground: 0 0% 98%; /* White */
    --sidebar-border: 234 64% 40%; /* Slightly lighter blue border */
    --sidebar-ring: 187 100% 38%; /* Teal focus ring */
  }

  .dark {
    /* Dark Theme (Adjust as needed, using defaults for now) */
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 234 64% 70%; /* Lighter Blue */
    --primary-foreground: 0 0% 98%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 187 100% 48%; /* Brighter Teal */
    --accent-foreground: 240 10% 3.9%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 187 100% 48%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --radius: 0.5rem;

    /* Sidebar specific theme (Dark mode) */
    --sidebar-background: 240 10% 10%; /* Darker Background */
    --sidebar-foreground: 0 0% 98%; /* White */
    --sidebar-primary: 0 0% 98%; /* White */
    --sidebar-primary-foreground: 240 10% 10%;
    --sidebar-accent: 187 100% 48%; /* Brighter Teal */
    --sidebar-accent-foreground: 240 10% 3.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 187 100% 48%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1,"calt" 1;
  }
}

/* Custom styles for react-flow nodes and edges */
@layer components {
  .react-flow__node {
    @apply rounded-lg shadow-sm cursor-grab hover:shadow-md transition-shadow bg-card text-card-foreground active:cursor-grabbing;
    /* z-index is handled by calculateEffectiveZIndex in diagram-utils and applied in CustomNode.tsx */
  }
  
  /* Type-specific styles. These mainly define border and text color. Background is transparent for boundaries. */
  .react-flow__node-server {
    @apply border-blue-400 text-blue-800; /* bg-card is default, can be overridden if needed */
  }
  .react-flow__node-database {
    @apply border-green-400 text-green-800;
  }
  .react-flow__node-service {
    @apply border-purple-400 text-purple-800;
  }
  .react-flow__node-router {
    @apply border-yellow-500 text-yellow-800;
  }
  .react-flow__node-boundary {
     /* Boundary nodes: dashed border, specific border color, TRANSPARENT background. */
     /* Selection ring is applied conditionally in CustomNode.tsx. */
     /* z-index is handled by calculateEffectiveZIndex and applied in CustomNode.tsx. */
     @apply border-2 border-dashed border-red-500 bg-transparent !important; /* Ensure background is transparent */
     @apply text-red-600; /* Text color for the label */
     @apply cursor-default; /* Boundaries are not typically grabbed and moved like other nodes */
   }
  
   .react-flow__node-default {
     @apply border-gray-400 text-gray-800;
   }

  .react-flow__handle {
    @apply w-3 h-3 bg-gray-500 border-2 border-background rounded-full;
    /* Handles z-index is set inline in CustomNode.tsx to be relative to their node's effective z-index. */
   }
   .react-flow__handle-connecting {
     @apply bg-primary;
   }

   /* Default edge path style */
   .react-flow__edge-path {
     @apply stroke-gray-500 stroke-2;
     marker-end: url(#arrowclosed); /* Example for default arrow */
   }

    /* Style for selected edges */
   .react-flow__edge.selected .react-flow__edge-path,
   .react-flow__edge:focus .react-flow__edge-path,
   .react-flow__edge:focus-within .react-flow__edge-path {
       @apply stroke-primary stroke-[3px]; /* Primary color from theme, thicker */
       marker-end: url(#arrowclosed-selected); /* Different arrow for selected state */
   }
    .react-flow__edge.selected .react-flow__edge-text,
    .react-flow__edge:focus .react-flow__edge-text,
    .react-flow__edge:focus-within .react-flow__edge-text {
        @apply fill-primary font-semibold;
    }


   /* Style for the resizable node wrapper if using node-resizer */
   .react-flow__node-resizer {
      /* z-index is managed by the NodeResizer component itself to be on top */
   }
   .react-flow__resize-control {
      /* @apply !border-primary; This was ! causing issues, use inline style or direct class on NodeResizer props */
   }
   .react-flow__resize-control line {
      /* @apply !border-primary; Same as above */
   }
    .react-flow__resize-handle {
        /* Default style for handles, can be overridden by NodeResizer handleClassName prop */
        /* @apply bg-background border-2 border-primary rounded-sm; */
        width: 10px;
        height: 10px;
    }

   .react-flow__controls {
      z-index: 200 !important; /* Ensure controls are on top of most elements, including resizers */
   }

    main.peer-data-\[variant=inset\] {
        margin-left: 0 !important; 
    }
    .react-flow {
        height: 100%;
        width: 100%;
        position: relative; 
    }
}